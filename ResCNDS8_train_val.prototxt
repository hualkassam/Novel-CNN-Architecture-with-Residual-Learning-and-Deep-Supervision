__author__ = 'Hussam_Qassim'

name: "Residual_CNDS"

layer {
  name: "Data_Tra"
  type: "Data"
  top: "data"
  top: "label"
  include {
    stage: "train"
  }
  transform_param {
    mirror: true
    crop_size: 227
  }
  data_param {
    batch_size: 256
  }
}

layer {
  name: "Data_Val"
  type: "Data"
  top: "data"
  top: "label"
  include {
    stage: "val"
  }
  transform_param {
    mirror: false
    crop_size: 227
  }
  data_param {
    batch_size: 128
  }
}


layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.5
    }
  }
}

layer {
	bottom: "conv1"
	top: "conv1"
	name: "scale1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}


layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
	bottom: "conv2"
	top: "conv2"
	name: "scale2"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}





layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
	bottom: "conv3_1"
	top: "conv3_1"
	name: "scale3_1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}

layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
	bottom: "conv3_2"
	top: "conv3_2"
	name: "scale3_2"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

# =============================
layer {
	bottom: "pool2"
	top: "res3_branch"
	name: "res3_branch"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3_branch"
	top: "res3_branch"
	name: "scale_res3_branch"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "conv3_2"
	bottom: "res3_branch"
	top: "res3"
	name: "res3"
	type: "Eltwise"
}

# =============================
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "res3"
  top: "res3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "res3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}





# =================DSN_conv3=====================


layer {
  name: "pool_DSN_conv3"
  type: "Pooling"
  bottom: "res3"
  top: "pool_DSN_conv3"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 2
  }
}





layer {
  name: "DSN_conv3"
  type: "Convolution"
  bottom: "pool_DSN_conv3"
  top: "DSN_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}





layer {
  name: "fc6_DSN_conv3"
  type: "InnerProduct"
  bottom: "DSN_conv3"
  top: "fc6_DSN_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}


layer {
  name: "relu6_DSN_conv3"
  type: "ReLU"
  bottom: "fc6_DSN_conv3"
  top: "fc6_DSN_conv3"
}

layer {
  name: "drop6_DSN_conv3"
  type: "Dropout"
  bottom: "fc6_DSN_conv3"
  top: "fc6_DSN_conv3"
  dropout_param {
    dropout_ratio: 0.5
  }
}





layer {
  name: "fc7_DSN_conv3"
  type: "InnerProduct"
  bottom: "fc6_DSN_conv3"
  top: "fc7_DSN_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer {
  name: "relu7_DSN_conv3"
  type: "ReLU"
  bottom: "fc7_DSN_conv3"
  top: "fc7_DSN_conv3"
}

layer {
  name: "drop7_DSN_conv3"
  type: "Dropout"
  bottom: "fc7_DSN_conv3"
  top: "fc7_DSN_conv3"
  dropout_param {
    dropout_ratio: 0.5
  }
}





layer {
  name: "fc8_DSN_conv3"
  type: "InnerProduct"
  bottom: "fc7_DSN_conv3"
  top: "fc8_DSN_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {

    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "Accuracy_DSN"
  type: "Accuracy"
  bottom: "fc8_DSN_conv3"
  bottom: "label"
  top: "Accuracy_DSN"
  include {
    stage: "val"
  }
}

layer {
  name: "Loss_DSN"
  type: "SoftmaxWithLoss"
  bottom: "fc8_DSN_conv3"
  bottom: "label"
  top: "Loss_DSN"
  loss_weight: 0.4
  exclude{
	stage: "deploy"
  }
}

layer{
  name: "Softmax_DSN"
  type: "Softmax"
  bottom: "fc8_DSN_conv3"
  top: "Softmax_DSN"
  include{
	stage: "deploy"
  }
}

# =================DSN-conv3=====================


layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
	bottom: "conv4_1"
	top: "conv4_1"
	name: "scale4_1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}

layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
	bottom: "conv4_2"
	top: "conv4_2"
	name: "scale4_2"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

# =============================
layer {
	bottom: "pool3"
	top: "res4_branch"
	name: "res4_branch"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4_branch"
	top: "res4_branch"
	name: "scale_res4_branch"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "conv4_2"
	bottom: "res4_branch"
	top: "res4"
	name: "res4"
	type: "Eltwise"
}

# =============================


layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "res4"
  top: "res4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "res4"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}





layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
	bottom: "conv5_1"
	top: "conv5_1"
	name: "scale5_1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}

layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
	bottom: "conv5_2"
	top: "conv5_2"
	name: "scale5_2"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "conv5_2"
	bottom: "pool4"
	top: "res5"
	name: "res5"
	type: "Eltwise"
}

layer {
  name: "relu_res5"
  type: "ReLU"
  bottom: "res5"
  top: "res5"
}


layer {
  name: "pool5"
  type: "Pooling"
  bottom: "res5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}





layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}

layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}





layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}

layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}





layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {

    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "Loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "Loss"
  exclude{
	stage:"deploy"
  }
}

layer {
  name: "Accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "Accuracy"
  include {
    stage: "val"
  }
}

layer {
  name: "Accuracy_Top5"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "Accuracy_Top5"
  include {
    stage: "val"
  }
  accuracy_param {
    top_k: 5
  }
}


layer{
  name: "Softmax"
  type: "Softmax"
  bottom: "fc8"
  top: "Softmax"
  include{
	stage: "deploy"
  }
}
